plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'checkstyle'
}

group 'io.javastubs'
version '1.0.0-SNAPSHOT'

def applicationName = 'javastubs'

application {
    // Define the main class for the application.
    mainClass = 'io.javastubs.Main'
}

jar {
    zip64 = true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    //dependsOn(":lib-common:jar")
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    baseName applicationName
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    configFile file('../config/checkstyle/checkstyle.xml')
    toolVersion '10.2' // Checkstyle version - this will determine what rules you can load.
}

dependencies {
    // This dependency is used by the application.
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'io.vertx:vertx-core:4.3.1'
    implementation 'io.vertx:vertx-web:4.3.1'
    implementation 'io.vertx:vertx-web-client:4.3.1'
    implementation 'io.vertx:vertx-config:4.3.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.0'

    implementation 'org.redisson:redisson:3.21.0'
    implementation 'io.aeron:aeron-all:1.40.0'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'io.vertx:vertx-junit5:4.3.1'
}

task enforceVersion {
    def foundVersion = JavaVersion.current()
    def expectedVersion = JavaVersion.VERSION_17
    if (foundVersion < expectedVersion)
        throw new IllegalStateException("Wrong Java version; required is "
                + expectedVersion + ", but found " + foundVersion)
}

compileJava.dependsOn(enforceVersion)

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
